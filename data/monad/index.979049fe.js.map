{"mappings":"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","sources":["node_modules/ramda/es/index.js","node_modules/ramda/es/add.js","node_modules/ramda/es/internal/_curry2.js","node_modules/ramda/es/internal/_curry1.js","node_modules/ramda/es/internal/_isPlaceholder.js","node_modules/ramda/es/addIndex.js","node_modules/ramda/es/internal/_concat.js","node_modules/ramda/es/curryN.js","node_modules/ramda/es/internal/_arity.js","node_modules/ramda/es/internal/_curryN.js","node_modules/ramda/es/adjust.js","node_modules/ramda/es/internal/_curry3.js","node_modules/ramda/es/all.js","node_modules/ramda/es/internal/_dispatchable.js","node_modules/ramda/es/internal/_isArray.js","node_modules/ramda/es/internal/_isTransformer.js","node_modules/ramda/es/internal/_xall.js","node_modules/ramda/es/internal/_reduced.js","node_modules/ramda/es/internal/_xfBase.js","node_modules/ramda/es/allPass.js","node_modules/ramda/es/max.js","node_modules/ramda/es/pluck.js","node_modules/ramda/es/map.js","node_modules/ramda/es/internal/_map.js","node_modules/ramda/es/internal/_reduce.js","node_modules/ramda/es/internal/_isArrayLike.js","node_modules/ramda/es/internal/_isString.js","node_modules/ramda/es/internal/_xwrap.js","node_modules/ramda/es/bind.js","node_modules/ramda/es/internal/_xmap.js","node_modules/ramda/es/keys.js","node_modules/ramda/es/internal/_has.js","node_modules/ramda/es/internal/_isArguments.js","node_modules/ramda/es/prop.js","node_modules/ramda/es/internal/_isInteger.js","node_modules/ramda/es/nth.js","node_modules/ramda/es/reduce.js","node_modules/ramda/es/always.js","node_modules/ramda/es/and.js","node_modules/ramda/es/any.js","node_modules/ramda/es/internal/_xany.js","node_modules/ramda/es/anyPass.js","node_modules/ramda/es/ap.js","node_modules/ramda/es/aperture.js","node_modules/ramda/es/internal/_aperture.js","node_modules/ramda/es/internal/_xaperture.js","node_modules/ramda/es/append.js","node_modules/ramda/es/apply.js","node_modules/ramda/es/applySpec.js","node_modules/ramda/es/values.js","node_modules/ramda/es/assoc.js","node_modules/ramda/es/assocPath.js","node_modules/ramda/es/internal/_assoc.js","node_modules/ramda/es/isNil.js","node_modules/ramda/es/binary.js","node_modules/ramda/es/nAry.js","node_modules/ramda/es/both.js","node_modules/ramda/es/internal/_isFunction.js","node_modules/ramda/es/lift.js","node_modules/ramda/es/liftN.js","node_modules/ramda/es/chain.js","node_modules/ramda/es/internal/_makeFlat.js","node_modules/ramda/es/internal/_xchain.js","node_modules/ramda/es/internal/_flatCat.js","node_modules/ramda/es/internal/_forceReduced.js","node_modules/ramda/es/clone.js","node_modules/ramda/es/internal/_clone.js","node_modules/ramda/es/internal/_cloneRegExp.js","node_modules/ramda/es/type.js","node_modules/ramda/es/collectBy.js","node_modules/ramda/es/complement.js","node_modules/ramda/es/not.js","node_modules/ramda/es/compose.js","node_modules/ramda/es/pipe.js","node_modules/ramda/es/internal/_pipe.js","node_modules/ramda/es/tail.js","node_modules/ramda/es/internal/_checkForMethod.js","node_modules/ramda/es/slice.js","node_modules/ramda/es/reverse.js","node_modules/ramda/es/composeWith.js","node_modules/ramda/es/pipeWith.js","node_modules/ramda/es/head.js","node_modules/ramda/es/identity.js","node_modules/ramda/es/internal/_identity.js","node_modules/ramda/es/concat.js","node_modules/ramda/es/toString.js","node_modules/ramda/es/internal/_toString.js","node_modules/ramda/es/internal/_includes.js","node_modules/ramda/es/internal/_indexOf.js","node_modules/ramda/es/equals.js","node_modules/ramda/es/internal/_equals.js","node_modules/ramda/es/internal/_arrayFromIterator.js","node_modules/ramda/es/internal/_includesWith.js","node_modules/ramda/es/internal/_functionName.js","node_modules/ramda/es/internal/_objectIs.js","node_modules/ramda/es/internal/_quote.js","node_modules/ramda/es/internal/_toISOString.js","node_modules/ramda/es/reject.js","node_modules/ramda/es/internal/_complement.js","node_modules/ramda/es/filter.js","node_modules/ramda/es/internal/_filter.js","node_modules/ramda/es/internal/_isObject.js","node_modules/ramda/es/internal/_xfilter.js","node_modules/ramda/es/cond.js","node_modules/ramda/es/construct.js","node_modules/ramda/es/constructN.js","node_modules/ramda/es/curry.js","node_modules/ramda/es/converge.js","node_modules/ramda/es/count.js","node_modules/ramda/es/reduceBy.js","node_modules/ramda/es/internal/_xreduceBy.js","node_modules/ramda/es/defaultTo.js","node_modules/ramda/es/descend.js","node_modules/ramda/es/difference.js","node_modules/ramda/es/internal/_Set.js","node_modules/ramda/es/differenceWith.js","node_modules/ramda/es/dissoc.js","node_modules/ramda/es/dissocPath.js","node_modules/ramda/es/internal/_dissoc.js","node_modules/ramda/es/remove.js","node_modules/ramda/es/drop.js","node_modules/ramda/es/internal/_xdrop.js","node_modules/ramda/es/dropLast.js","node_modules/ramda/es/internal/_dropLast.js","node_modules/ramda/es/take.js","node_modules/ramda/es/internal/_xtake.js","node_modules/ramda/es/internal/_xdropLast.js","node_modules/ramda/es/dropLastWhile.js","node_modules/ramda/es/internal/_dropLastWhile.js","node_modules/ramda/es/internal/_xdropLastWhile.js","node_modules/ramda/es/dropRepeats.js","node_modules/ramda/es/internal/_xdropRepeatsWith.js","node_modules/ramda/es/dropRepeatsWith.js","node_modules/ramda/es/last.js","node_modules/ramda/es/dropWhile.js","node_modules/ramda/es/internal/_xdropWhile.js","node_modules/ramda/es/either.js","node_modules/ramda/es/or.js","node_modules/ramda/es/empty.js","node_modules/ramda/es/internal/_isTypedArray.js","node_modules/ramda/es/endsWith.js","node_modules/ramda/es/takeLast.js","node_modules/ramda/es/eqBy.js","node_modules/ramda/es/eqProps.js","node_modules/ramda/es/evolve.js","node_modules/ramda/es/find.js","node_modules/ramda/es/internal/_xfind.js","node_modules/ramda/es/findIndex.js","node_modules/ramda/es/internal/_xfindIndex.js","node_modules/ramda/es/findLast.js","node_modules/ramda/es/internal/_xfindLast.js","node_modules/ramda/es/findLastIndex.js","node_modules/ramda/es/internal/_xfindLastIndex.js","node_modules/ramda/es/flatten.js","node_modules/ramda/es/flip.js","node_modules/ramda/es/forEach.js","node_modules/ramda/es/forEachObjIndexed.js","node_modules/ramda/es/groupBy.js","node_modules/ramda/es/has.js","node_modules/ramda/es/hasPath.js","node_modules/ramda/es/hasIn.js","node_modules/ramda/es/identical.js","node_modules/ramda/es/ifElse.js","node_modules/ramda/es/includes.js","node_modules/ramda/es/indexOf.js","node_modules/ramda/es/innerJoin.js","node_modules/ramda/es/intersection.js","node_modules/ramda/es/uniq.js","node_modules/ramda/es/uniqBy.js","node_modules/ramda/es/internal/_xuniqBy.js","node_modules/ramda/es/intersperse.js","node_modules/ramda/es/into.js","node_modules/ramda/es/internal/_stepCat.js","node_modules/ramda/es/internal/_objectAssign.js","node_modules/ramda/es/objOf.js","node_modules/ramda/es/invert.js","node_modules/ramda/es/invertObj.js","node_modules/ramda/es/invoker.js","node_modules/ramda/es/is.js","node_modules/ramda/es/isEmpty.js","node_modules/ramda/es/juxt.js","node_modules/ramda/es/lastIndexOf.js","node_modules/ramda/es/length.js","node_modules/ramda/es/internal/_isNumber.js","node_modules/ramda/es/lens.js","node_modules/ramda/es/lensIndex.js","node_modules/ramda/es/update.js","node_modules/ramda/es/lensPath.js","node_modules/ramda/es/path.js","node_modules/ramda/es/paths.js","node_modules/ramda/es/lensProp.js","node_modules/ramda/es/mapObjIndexed.js","node_modules/ramda/es/mathMod.js","node_modules/ramda/es/mean.js","node_modules/ramda/es/sum.js","node_modules/ramda/es/median.js","node_modules/ramda/es/memoizeWith.js","node_modules/ramda/es/mergeAll.js","node_modules/ramda/es/mergeDeepLeft.js","node_modules/ramda/es/mergeDeepWithKey.js","node_modules/ramda/es/mergeWithKey.js","node_modules/ramda/es/mergeDeepRight.js","node_modules/ramda/es/mergeDeepWith.js","node_modules/ramda/es/mergeLeft.js","node_modules/ramda/es/mergeRight.js","node_modules/ramda/es/mergeWith.js","node_modules/ramda/es/modify.js","node_modules/ramda/es/modifyPath.js","node_modules/ramda/es/internal/_modify.js","node_modules/ramda/es/multiply.js","node_modules/ramda/es/partialObject.js","node_modules/ramda/es/none.js","node_modules/ramda/es/nthArg.js","node_modules/ramda/es/of.js","node_modules/ramda/es/internal/_of.js","node_modules/ramda/es/once.js","node_modules/ramda/es/otherwise.js","node_modules/ramda/es/internal/_assertPromise.js","node_modules/ramda/es/over.js","node_modules/ramda/es/partial.js","node_modules/ramda/es/internal/_createPartialApplicator.js","node_modules/ramda/es/partialRight.js","node_modules/ramda/es/partition.js","node_modules/ramda/es/pathEq.js","node_modules/ramda/es/pathOr.js","node_modules/ramda/es/pathSatisfies.js","node_modules/ramda/es/pickAll.js","node_modules/ramda/es/prepend.js","node_modules/ramda/es/product.js","node_modules/ramda/es/project.js","node_modules/ramda/es/useWith.js","node_modules/ramda/es/promap.js","node_modules/ramda/es/internal/_promap.js","node_modules/ramda/es/internal/_xpromap.js","node_modules/ramda/es/propEq.js","node_modules/ramda/es/propIs.js","node_modules/ramda/es/propOr.js","node_modules/ramda/es/propSatisfies.js","node_modules/ramda/es/props.js","node_modules/ramda/es/range.js","node_modules/ramda/es/reduceRight.js","node_modules/ramda/es/reduceWhile.js","node_modules/ramda/es/reduced.js","node_modules/ramda/es/repeat.js","node_modules/ramda/es/times.js","node_modules/ramda/es/sequence.js","node_modules/ramda/es/set.js","node_modules/ramda/es/sort.js","node_modules/ramda/es/splitAt.js","node_modules/ramda/es/splitEvery.js","node_modules/ramda/es/startsWith.js","node_modules/ramda/es/symmetricDifference.js","node_modules/ramda/es/symmetricDifferenceWith.js","node_modules/ramda/es/takeLastWhile.js","node_modules/ramda/es/takeWhile.js","node_modules/ramda/es/internal/_xtakeWhile.js","node_modules/ramda/es/tap.js","node_modules/ramda/es/internal/_xtap.js","node_modules/ramda/es/test.js","node_modules/ramda/es/internal/_isRegExp.js","node_modules/ramda/es/andThen.js","node_modules/ramda/es/toPairs.js","node_modules/ramda/es/transduce.js","node_modules/ramda/es/traverse.js","node_modules/ramda/es/trim.js","node_modules/ramda/es/tryCatch.js","node_modules/ramda/es/unary.js","node_modules/ramda/es/uncurryN.js","node_modules/ramda/es/union.js","node_modules/ramda/es/unionWith.js","node_modules/ramda/es/uniqWith.js","node_modules/ramda/es/internal/_xuniqWith.js","node_modules/ramda/es/unnest.js","node_modules/ramda/es/unwind.js","node_modules/ramda/es/view.js","node_modules/ramda/es/where.js","node_modules/ramda/es/whereAny.js","node_modules/ramda/es/whereEq.js","node_modules/ramda/es/without.js","node_modules/ramda/es/thunkify.js"],"sourcesContent":["export { default as F } from \"./F.js\";\nexport { default as T } from \"./T.js\";\nexport { default as __ } from \"./__.js\";\nexport { default as add } from \"./add.js\";\nexport { default as addIndex } from \"./addIndex.js\";\nexport { default as adjust } from \"./adjust.js\";\nexport { default as all } from \"./all.js\";\nexport { default as allPass } from \"./allPass.js\";\nexport { default as always } from \"./always.js\";\nexport { default as and } from \"./and.js\";\nexport { default as any } from \"./any.js\";\nexport { default as anyPass } from \"./anyPass.js\";\nexport { default as ap } from \"./ap.js\";\nexport { default as aperture } from \"./aperture.js\";\nexport { default as append } from \"./append.js\";\nexport { default as apply } from \"./apply.js\";\nexport { default as applySpec } from \"./applySpec.js\";\nexport { default as applyTo } from \"./applyTo.js\";\nexport { default as ascend } from \"./ascend.js\";\nexport { default as assoc } from \"./assoc.js\";\nexport { default as assocPath } from \"./assocPath.js\";\nexport { default as binary } from \"./binary.js\";\nexport { default as bind } from \"./bind.js\";\nexport { default as both } from \"./both.js\";\nexport { default as call } from \"./call.js\";\nexport { default as chain } from \"./chain.js\";\nexport { default as clamp } from \"./clamp.js\";\nexport { default as clone } from \"./clone.js\";\nexport { default as collectBy } from \"./collectBy.js\";\nexport { default as comparator } from \"./comparator.js\";\nexport { default as complement } from \"./complement.js\";\nexport { default as compose } from \"./compose.js\";\nexport { default as composeWith } from \"./composeWith.js\";\nexport { default as concat } from \"./concat.js\";\nexport { default as cond } from \"./cond.js\";\nexport { default as construct } from \"./construct.js\";\nexport { default as constructN } from \"./constructN.js\";\nexport { default as converge } from \"./converge.js\";\nexport { default as count } from \"./count.js\";\nexport { default as countBy } from \"./countBy.js\";\nexport { default as curry } from \"./curry.js\";\nexport { default as curryN } from \"./curryN.js\";\nexport { default as dec } from \"./dec.js\";\nexport { default as defaultTo } from \"./defaultTo.js\";\nexport { default as descend } from \"./descend.js\";\nexport { default as difference } from \"./difference.js\";\nexport { default as differenceWith } from \"./differenceWith.js\";\nexport { default as dissoc } from \"./dissoc.js\";\nexport { default as dissocPath } from \"./dissocPath.js\";\nexport { default as divide } from \"./divide.js\";\nexport { default as drop } from \"./drop.js\";\nexport { default as dropLast } from \"./dropLast.js\";\nexport { default as dropLastWhile } from \"./dropLastWhile.js\";\nexport { default as dropRepeats } from \"./dropRepeats.js\";\nexport { default as dropRepeatsWith } from \"./dropRepeatsWith.js\";\nexport { default as dropWhile } from \"./dropWhile.js\";\nexport { default as either } from \"./either.js\";\nexport { default as empty } from \"./empty.js\";\nexport { default as endsWith } from \"./endsWith.js\";\nexport { default as eqBy } from \"./eqBy.js\";\nexport { default as eqProps } from \"./eqProps.js\";\nexport { default as equals } from \"./equals.js\";\nexport { default as evolve } from \"./evolve.js\";\nexport { default as filter } from \"./filter.js\";\nexport { default as find } from \"./find.js\";\nexport { default as findIndex } from \"./findIndex.js\";\nexport { default as findLast } from \"./findLast.js\";\nexport { default as findLastIndex } from \"./findLastIndex.js\";\nexport { default as flatten } from \"./flatten.js\";\nexport { default as flip } from \"./flip.js\";\nexport { default as forEach } from \"./forEach.js\";\nexport { default as forEachObjIndexed } from \"./forEachObjIndexed.js\";\nexport { default as fromPairs } from \"./fromPairs.js\";\nexport { default as groupBy } from \"./groupBy.js\";\nexport { default as groupWith } from \"./groupWith.js\";\nexport { default as gt } from \"./gt.js\";\nexport { default as gte } from \"./gte.js\";\nexport { default as has } from \"./has.js\";\nexport { default as hasIn } from \"./hasIn.js\";\nexport { default as hasPath } from \"./hasPath.js\";\nexport { default as head } from \"./head.js\";\nexport { default as identical } from \"./identical.js\";\nexport { default as identity } from \"./identity.js\";\nexport { default as ifElse } from \"./ifElse.js\";\nexport { default as inc } from \"./inc.js\";\nexport { default as includes } from \"./includes.js\";\nexport { default as indexBy } from \"./indexBy.js\";\nexport { default as indexOf } from \"./indexOf.js\";\nexport { default as init } from \"./init.js\";\nexport { default as innerJoin } from \"./innerJoin.js\";\nexport { default as insert } from \"./insert.js\";\nexport { default as insertAll } from \"./insertAll.js\";\nexport { default as intersection } from \"./intersection.js\";\nexport { default as intersperse } from \"./intersperse.js\";\nexport { default as into } from \"./into.js\";\nexport { default as invert } from \"./invert.js\";\nexport { default as invertObj } from \"./invertObj.js\";\nexport { default as invoker } from \"./invoker.js\";\nexport { default as is } from \"./is.js\";\nexport { default as isEmpty } from \"./isEmpty.js\";\nexport { default as isNil } from \"./isNil.js\";\nexport { default as join } from \"./join.js\";\nexport { default as juxt } from \"./juxt.js\";\nexport { default as keys } from \"./keys.js\";\nexport { default as keysIn } from \"./keysIn.js\";\nexport { default as last } from \"./last.js\";\nexport { default as lastIndexOf } from \"./lastIndexOf.js\";\nexport { default as length } from \"./length.js\";\nexport { default as lens } from \"./lens.js\";\nexport { default as lensIndex } from \"./lensIndex.js\";\nexport { default as lensPath } from \"./lensPath.js\";\nexport { default as lensProp } from \"./lensProp.js\";\nexport { default as lift } from \"./lift.js\";\nexport { default as liftN } from \"./liftN.js\";\nexport { default as lt } from \"./lt.js\";\nexport { default as lte } from \"./lte.js\";\nexport { default as map } from \"./map.js\";\nexport { default as mapAccum } from \"./mapAccum.js\";\nexport { default as mapAccumRight } from \"./mapAccumRight.js\";\nexport { default as mapObjIndexed } from \"./mapObjIndexed.js\";\nexport { default as match } from \"./match.js\";\nexport { default as mathMod } from \"./mathMod.js\";\nexport { default as max } from \"./max.js\";\nexport { default as maxBy } from \"./maxBy.js\";\nexport { default as mean } from \"./mean.js\";\nexport { default as median } from \"./median.js\";\nexport { default as memoizeWith } from \"./memoizeWith.js\";\nexport { default as mergeAll } from \"./mergeAll.js\";\nexport { default as mergeDeepLeft } from \"./mergeDeepLeft.js\";\nexport { default as mergeDeepRight } from \"./mergeDeepRight.js\";\nexport { default as mergeDeepWith } from \"./mergeDeepWith.js\";\nexport { default as mergeDeepWithKey } from \"./mergeDeepWithKey.js\";\nexport { default as mergeLeft } from \"./mergeLeft.js\";\nexport { default as mergeRight } from \"./mergeRight.js\";\nexport { default as mergeWith } from \"./mergeWith.js\";\nexport { default as mergeWithKey } from \"./mergeWithKey.js\";\nexport { default as min } from \"./min.js\";\nexport { default as minBy } from \"./minBy.js\";\nexport { default as modify } from \"./modify.js\";\nexport { default as modifyPath } from \"./modifyPath.js\";\nexport { default as modulo } from \"./modulo.js\";\nexport { default as move } from \"./move.js\";\nexport { default as multiply } from \"./multiply.js\";\nexport { default as nAry } from \"./nAry.js\";\nexport { default as partialObject } from \"./partialObject.js\";\nexport { default as negate } from \"./negate.js\";\nexport { default as none } from \"./none.js\";\nexport { default as not } from \"./not.js\";\nexport { default as nth } from \"./nth.js\";\nexport { default as nthArg } from \"./nthArg.js\";\nexport { default as o } from \"./o.js\";\nexport { default as objOf } from \"./objOf.js\";\nexport { default as of } from \"./of.js\";\nexport { default as omit } from \"./omit.js\";\nexport { default as on } from \"./on.js\";\nexport { default as once } from \"./once.js\";\nexport { default as or } from \"./or.js\";\nexport { default as otherwise } from \"./otherwise.js\";\nexport { default as over } from \"./over.js\";\nexport { default as pair } from \"./pair.js\";\nexport { default as partial } from \"./partial.js\";\nexport { default as partialRight } from \"./partialRight.js\";\nexport { default as partition } from \"./partition.js\";\nexport { default as path } from \"./path.js\";\nexport { default as paths } from \"./paths.js\";\nexport { default as pathEq } from \"./pathEq.js\";\nexport { default as pathOr } from \"./pathOr.js\";\nexport { default as pathSatisfies } from \"./pathSatisfies.js\";\nexport { default as pick } from \"./pick.js\";\nexport { default as pickAll } from \"./pickAll.js\";\nexport { default as pickBy } from \"./pickBy.js\";\nexport { default as pipe } from \"./pipe.js\";\nexport { default as pipeWith } from \"./pipeWith.js\";\nexport { default as pluck } from \"./pluck.js\";\nexport { default as prepend } from \"./prepend.js\";\nexport { default as product } from \"./product.js\";\nexport { default as project } from \"./project.js\";\nexport { default as promap } from \"./promap.js\";\nexport { default as prop } from \"./prop.js\";\nexport { default as propEq } from \"./propEq.js\";\nexport { default as propIs } from \"./propIs.js\";\nexport { default as propOr } from \"./propOr.js\";\nexport { default as propSatisfies } from \"./propSatisfies.js\";\nexport { default as props } from \"./props.js\";\nexport { default as range } from \"./range.js\";\nexport { default as reduce } from \"./reduce.js\";\nexport { default as reduceBy } from \"./reduceBy.js\";\nexport { default as reduceRight } from \"./reduceRight.js\";\nexport { default as reduceWhile } from \"./reduceWhile.js\";\nexport { default as reduced } from \"./reduced.js\";\nexport { default as reject } from \"./reject.js\";\nexport { default as remove } from \"./remove.js\";\nexport { default as repeat } from \"./repeat.js\";\nexport { default as replace } from \"./replace.js\";\nexport { default as reverse } from \"./reverse.js\";\nexport { default as scan } from \"./scan.js\";\nexport { default as sequence } from \"./sequence.js\";\nexport { default as set } from \"./set.js\";\nexport { default as slice } from \"./slice.js\";\nexport { default as sort } from \"./sort.js\";\nexport { default as sortBy } from \"./sortBy.js\";\nexport { default as sortWith } from \"./sortWith.js\";\nexport { default as split } from \"./split.js\";\nexport { default as splitAt } from \"./splitAt.js\";\nexport { default as splitEvery } from \"./splitEvery.js\";\nexport { default as splitWhen } from \"./splitWhen.js\";\nexport { default as splitWhenever } from \"./splitWhenever.js\";\nexport { default as startsWith } from \"./startsWith.js\";\nexport { default as subtract } from \"./subtract.js\";\nexport { default as sum } from \"./sum.js\";\nexport { default as symmetricDifference } from \"./symmetricDifference.js\";\nexport { default as symmetricDifferenceWith } from \"./symmetricDifferenceWith.js\";\nexport { default as tail } from \"./tail.js\";\nexport { default as take } from \"./take.js\";\nexport { default as takeLast } from \"./takeLast.js\";\nexport { default as takeLastWhile } from \"./takeLastWhile.js\";\nexport { default as takeWhile } from \"./takeWhile.js\";\nexport { default as tap } from \"./tap.js\";\nexport { default as test } from \"./test.js\";\nexport { default as andThen } from \"./andThen.js\";\nexport { default as times } from \"./times.js\";\nexport { default as toLower } from \"./toLower.js\";\nexport { default as toPairs } from \"./toPairs.js\";\nexport { default as toPairsIn } from \"./toPairsIn.js\";\nexport { default as toString } from \"./toString.js\";\nexport { default as toUpper } from \"./toUpper.js\";\nexport { default as transduce } from \"./transduce.js\";\nexport { default as transpose } from \"./transpose.js\";\nexport { default as traverse } from \"./traverse.js\";\nexport { default as trim } from \"./trim.js\";\nexport { default as tryCatch } from \"./tryCatch.js\";\nexport { default as type } from \"./type.js\";\nexport { default as unapply } from \"./unapply.js\";\nexport { default as unary } from \"./unary.js\";\nexport { default as uncurryN } from \"./uncurryN.js\";\nexport { default as unfold } from \"./unfold.js\";\nexport { default as union } from \"./union.js\";\nexport { default as unionWith } from \"./unionWith.js\";\nexport { default as uniq } from \"./uniq.js\";\nexport { default as uniqBy } from \"./uniqBy.js\";\nexport { default as uniqWith } from \"./uniqWith.js\";\nexport { default as unless } from \"./unless.js\";\nexport { default as unnest } from \"./unnest.js\";\nexport { default as until } from \"./until.js\";\nexport { default as unwind } from \"./unwind.js\";\nexport { default as update } from \"./update.js\";\nexport { default as useWith } from \"./useWith.js\";\nexport { default as values } from \"./values.js\";\nexport { default as valuesIn } from \"./valuesIn.js\";\nexport { default as view } from \"./view.js\";\nexport { default as when } from \"./when.js\";\nexport { default as where } from \"./where.js\";\nexport { default as whereAny } from \"./whereAny.js\";\nexport { default as whereEq } from \"./whereEq.js\";\nexport { default as without } from \"./without.js\";\nexport { default as xor } from \"./xor.js\";\nexport { default as xprod } from \"./xprod.js\";\nexport { default as zip } from \"./zip.js\";\nexport { default as zipObj } from \"./zipObj.js\";\nexport { default as zipWith } from \"./zipWith.js\";\nexport { default as thunkify } from \"./thunkify.js\";","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _concat from \"./internal/_concat.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig (((a ...) -> b) ... -> [a] -> *) -> (((a ..., Int, [a]) -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  var len = list.length;\n\n  if (idx >= len || idx < -len) {\n    return list;\n  }\n\n  var _idx = (len + idx) % len;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.project, R.prop, R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n\n  return _isInteger(p) ? nth(p, obj) : obj[p];\n});\n\nexport default prop;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is falsy, otherwise the second argument.\n * Acts as the boolean `and` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.both, R.or\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport map from \"./map.js\";\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;","import _aperture from \"./internal/_aperture.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xaperture from \"./internal/_xaperture.js\";\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}","import _concat from \"./_concat.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;","import _curry1 from \"./internal/_curry1.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport apply from \"./apply.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\nimport keys from \"./keys.js\";\nimport values from \"./values.js\"; // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\nfunction mapValues(fn, obj) {\n  return _isArray(obj) ? obj.map(fn) : keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys, R.toPairs\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry3 from \"./internal/_curry3.js\";\nimport assocPath from \"./assocPath.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> a -> {k: v} -> {k: v}\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  return assocPath([prop], val, obj);\n});\n\nexport default assoc;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  return _assoc(idx, val, obj);\n});\n\nexport default assocPath;","import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _assoc(prop, val, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = val;\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> ((a, b) -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport and from \"./and.js\";\nimport lift from \"./lift.js\";\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.either, R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;","export default function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}","import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity >= 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([100, 200], [30, 40], [5, 6, 7]); //=> [135, 136, 137, 145, 146, 147, 235, 236, 237, 245, 246, 247]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([10, 20], [1], [2, 3], [4], [100, 200]); //=> [117, 217, 118, 218, 127, 227, 128, 228]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport ap from \"./ap.js\";\nimport curryN from \"./curryN.js\";\nimport map from \"./map.js\";\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\nimport _xchain from \"./internal/_xchain.js\";\nimport map from \"./map.js\";\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;","import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","import _curry2 from \"./_curry2.js\";\nimport _flatCat from \"./_flatCat.js\";\nimport map from \"../map.js\";\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nexport default _xchain;","import _forceReduced from \"./_forceReduced.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx] = value;\n    refTo[idx] = copiedValue;\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Splits a list into sub-lists, based on the result of calling a key-returning function on each element,\n * and grouping the results according to values returned.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> [[b]]\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Array}\n *    An array of arrays where each sub-array contains items for which\n *    the String-returning function has returned the same value.\n * @see R.groupBy, R.partition\n * @example\n *      R.collectBy(R.prop('type'), [\n *        {type: 'breakfast', item: '☕️'},\n *        {type: 'lunch', item: '🌯'},\n *        {type: 'dinner', item: '🍝'},\n *        {type: 'breakfast', item: '🥐'},\n *        {type: 'lunch', item: '🍕'}\n *      ]);\n *\n *      // [ [ {type: 'breakfast', item: '☕️'},\n *      //     {type: 'breakfast', item: '🥐'} ],\n *      //   [ {type: 'lunch', item: '🌯'},\n *      //     {type: 'lunch', item: '🍕'} ],\n *      //   [ {type: 'dinner', item: '🍝'} ] ]\n */\n\nvar collectBy =\n/*#__PURE__*/\n_curry2(function collectBy(fn, list) {\n  var group = _reduce(function (o, x) {\n    var tag = fn(x);\n\n    if (o[tag] === undefined) {\n      o[tag] = [];\n    }\n\n    o[tag].push(x);\n    return o;\n  }, {}, list);\n\n  var newList = [];\n\n  for (var tag in group) {\n    newList.push(group[tag]);\n  }\n\n  return newList;\n});\n\nexport default collectBy;","import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      R.isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      R.isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import pipe from \"./pipe.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _curry1 from \"./internal/_curry1.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import _curry2 from \"./internal/_curry2.js\";\nimport pipeWith from \"./pipeWith.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport head from \"./head.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport tail from \"./tail.js\";\nimport identity from \"./identity.js\";\n/**\n * Performs left-to-right function composition using transforming function. The first function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to pipe\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nexport default pipeWith;","import nth from \"./nth.js\";\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","export default function _identity(x) {\n  return x;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport _isString from \"./internal/_isString.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 !== 0;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport map from \"./map.js\";\nimport max from \"./max.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * **Please note**: This is not a direct substitute for a `switch` statement.\n * Remember that both elements of every pair passed to `cond` are *functions*,\n * and `cond` returns a function.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;","import _curry1 from \"./internal/_curry1.js\";\nimport constructN from \"./constructN.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;","import _curry2 from \"./internal/_curry2.js\";\nimport curry from \"./curry.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _reduce from \"./internal/_reduce.js\";\nimport curry from \"./curry.js\";\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\n\nvar count =\n/*#__PURE__*/\ncurry(function (pred, list) {\n  return _reduce(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nexport default count;","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;","import _curry2 from \"./internal/_curry2.js\";\nimport _Set from \"./internal/_Set.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;","import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;","import _curry2 from \"./internal/_curry2.js\";\nimport dissocPath from \"./dissocPath.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  return dissocPath([prop], obj);\n});\n\nexport default dissoc;","import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\n\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  return result;\n}\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","import _isInteger from \"./_isInteger.js\";\nimport _isArray from \"./_isArray.js\";\nimport remove from \"../remove.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @private\n * @param {String|Number} prop The name of the property to dissociate\n * @param {Object|Array} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n */\n\nexport default function _dissoc(prop, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (_isInteger(prop) && _isArray(obj)) {\n    return remove(prop, 1, obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n}","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLast from \"./internal/_dropLast.js\";\nimport _xdropLast from \"./internal/_xdropLast.js\";\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;","import take from \"../take.js\";\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtake from \"./internal/_xtake.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nexport default _xdropLast;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLastWhile from \"./internal/_dropLastWhile.js\";\nimport _xdropLastWhile from \"./internal/_xdropLastWhile.js\";\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;","import slice from \"../slice.js\";\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}","import _curry2 from \"./_curry2.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nexport default _xdropLastWhile;","import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nexport default _xdropRepeatsWith;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport last from \"./last.js\";\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;","import nth from \"./nth.js\";\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropWhile from \"./internal/_xdropWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport lift from \"./lift.js\";\nimport or from \"./or.js\";\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.both, R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is truthy, otherwise the second argument.\n * Acts as the boolean `or` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.either, R.and\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry1 from \"./internal/_curry1.js\";\nimport _isArguments from \"./internal/_isArguments.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _isString from \"./internal/_isString.js\";\nimport _isTypedArray from \"./internal/_isTypedArray.js\";\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`),\n * TypedArray (`Uint8Array []`, `Float32Array []`, etc), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));               //=> Nothing()\n *      R.empty([1, 2, 3]);              //=> []\n *      R.empty('unicorns');             //=> ''\n *      R.empty({x: 1, y: 2});           //=> {}\n *      R.empty(Uint8Array.from('123')); //=> Uint8Array []\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : _isTypedArray(x) ? x.constructor.from('') : void 0 // else\n  ;\n});\n\nexport default empty;","/**\n * Tests whether or not an object is a typed array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is a typed array, `false` otherwise.\n * @example\n *\n *      _isTypedArray(new Uint8Array([])); //=> true\n *      _isTypedArray(new Float32Array([])); //=> true\n *      _isTypedArray([]); //=> false\n *      _isTypedArray(null); //=> false\n *      _isTypedArray({}); //=> false\n */\nexport default function _isTypedArray(val) {\n  var type = Object.prototype.toString.call(val);\n  return type === '[object Uint8ClampedArray]' || type === '[object Int8Array]' || type === '[object Uint8Array]' || type === '[object Int16Array]' || type === '[object Uint16Array]' || type === '[object Int32Array]' || type === '[object Uint32Array]' || type === '[object Float32Array]' || type === '[object Float64Array]' || type === '[object BigInt64Array]' || type === '[object BigUint64Array]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport takeLast from \"./takeLast.js\";\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;","import _curry2 from \"./internal/_curry2.js\";\nimport drop from \"./drop.js\";\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindIndex from \"./internal/_xfindIndex.js\";\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.indexOf\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLast from \"./internal/_xfindLast.js\";\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nexport default _xfindLast;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLastIndex from \"./internal/_xfindLastIndex.js\";\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.lastIndexOf\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nexport default _xfindLastIndex;","import _curry1 from \"./internal/_curry1.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;","import _curry2 from \"./internal/_curry2.js\";\nimport keys from \"./keys.js\";\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\n\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\nimport hasPath from \"./hasPath.js\";\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nexport default has;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default hasPath;","import _curry2 from \"./internal/_curry2.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  if (isNil(obj)) {\n    return false;\n  }\n\n  return prop in obj;\n});\n\nexport default hasIn;","import _objectIs from \"./internal/_objectIs.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nexport default identical;","import _curry3 from \"./internal/_curry3.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({ count: 1 }); //=> { count: 2 }\n *      incCount({});           //=> { count: 1 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Also works with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default includes;","import _curry2 from \"./internal/_curry2.js\";\nimport _indexOf from \"./internal/_indexOf.js\";\nimport _isArray from \"./internal/_isArray.js\";\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf, R.findIndex\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _filter from \"./internal/_filter.js\";\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport flip from \"./flip.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nexport default intersection;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqBy;","import _curry2 from \"./_curry2.js\";\nimport _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqBy =\n/*#__PURE__*/\nfunction () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XUniqBy;\n}();\n\nvar _xuniqBy =\n/*#__PURE__*/\n_curry2(function _xuniqBy(f, xf) {\n  return new XUniqBy(f, xf);\n});\n\nexport default _xuniqBy;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;","import _clone from \"./internal/_clone.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _isTransformer from \"./internal/_isTransformer.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _stepCat from \"./internal/_stepCat.js\";\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;","import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport keys from \"./keys.js\";\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport curryN from \"./curryN.js\";\nimport toString from \"./toString.js\";\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * See if an object (i.e. `val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n * If `val` was created using `Object.create`, `R.is(Object, val) === true`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val instanceof Ctor || val != null && (val.constructor === Ctor || Ctor.name === 'Object' && typeof val === 'object');\n});\n\nexport default is;","import _curry1 from \"./internal/_curry1.js\";\nimport empty from \"./empty.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf, R.findLastIndex\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;","import _curry1 from \"./internal/_curry1.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry1 from \"./internal/_curry1.js\";\nimport lens from \"./lens.js\";\nimport nth from \"./nth.js\";\nimport update from \"./update.js\";\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;","import _curry3 from \"./internal/_curry3.js\";\nimport adjust from \"./adjust.js\";\nimport always from \"./always.js\";\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nexport default update;","import _curry1 from \"./internal/_curry1.js\";\nimport assocPath from \"./assocPath.js\";\nimport lens from \"./lens.js\";\nimport path from \"./path.js\";\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int | Symbol]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;","import _curry1 from \"./internal/_curry1.js\";\nimport assoc from \"./assoc.js\";\nimport lens from \"./lens.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport keys from \"./keys.js\";\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;","import _curry1 from \"./internal/_curry1.js\";\nimport sum from \"./sum.js\";\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;","import add from \"./add.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;","import _curry1 from \"./internal/_curry1.js\";\nimport mean from \"./mean.js\";\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * Care must be taken when implementing key generation to avoid key collision,\n * or if tracking references, memory leaks and mutating arguments.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(Number, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates one new object with the own properties from a list of objects.\n * If a key exists in more than one object, the value from the last\n * object it exists in will be used.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default mergeRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;","import _curry3 from \"./internal/_curry3.js\";\nimport modifyPath from \"./modifyPath.js\";\n/**\n * Creates a copy of the passed object by applying an `fn` function to the given `prop` property.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding property does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig Idx -> (v -> v) -> {k: v} -> {k: v}\n * @param {String|Number} prop The property to be modified.\n * @param {Function} fn The function to apply to the property.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', age: 20, pets: ['dog', 'cat']};\n *      R.modify('age', R.add(1), person); //=> {name: 'James', age: 21, pets: ['dog', 'cat']}\n *      R.modify('pets', R.append('turtle'), person); //=> {name: 'James', age: 20, pets: ['dog', 'cat', 'turtle']}\n */\n\nvar modify =\n/*#__PURE__*/\n_curry3(function modify(prop, fn, object) {\n  return modifyPath([prop], fn, object);\n});\n\nexport default modify;","import _curry3 from \"./internal/_curry3.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _has from \"./internal/_has.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport _modify from \"./internal/_modify.js\";\n/**\n * Creates a shallow clone of the passed object by applying an `fn` function\n * to the value at the given path.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding path does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig [Idx] -> (v -> v) -> {k: v} -> {k: v}\n * @param {Array} path The path to be modified.\n * @param {Function} fn The function to apply to the path.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', address: { zipCode: '90216' }};\n *      R.modifyPath(['address', 'zipCode'], R.reverse, person); //=> {name: 'James', address: { zipCode: '61209' }}\n *\n *      // Can handle arrays too\n *      const person = {name: 'James', addresses: [{ zipCode: '90216' }]};\n *      R.modifyPath(['addresses', 0, 'zipCode'], R.reverse, person); //=> {name: 'James', addresses: [{ zipCode: '61209' }]}\n */\n\nvar modifyPath =\n/*#__PURE__*/\n_curry3(function modifyPath(path, fn, object) {\n  if (!_isObject(object) && !_isArray(object) || path.length === 0) {\n    return object;\n  }\n\n  var idx = path[0];\n\n  if (!_has(idx, object)) {\n    return object;\n  }\n\n  if (path.length === 1) {\n    return _modify(idx, fn, object);\n  }\n\n  var val = modifyPath(Array.prototype.slice.call(path, 1), fn, object[idx]);\n\n  if (val === object[idx]) {\n    return object;\n  }\n\n  return _assoc(idx, val, object);\n});\n\nexport default modifyPath;","import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = fn(result[prop]);\n  return result;\n}","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import mergeDeepRight from \"./mergeDeepRight.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\n\nexport default\n/*#__PURE__*/\n_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 !== 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;","import _curry1 from \"./internal/_curry1.js\";\nimport _of from \"./internal/_of.js\";\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;","export default function _of(x) {\n  return [x];\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;","import _isFunction from \"./_isFunction.js\";\nimport _toString from \"./_toString.js\";\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry3 from \"./internal/_curry3.js\"; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.set, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(3); //=> 6\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;","import _arity from \"./_arity.js\";\nimport _curry2 from \"./_curry2.js\";\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\nimport flip from \"./flip.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;","import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\nimport path from \"./path.js\";\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport path from \"./path.js\";\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry3 from \"./internal/_curry3.js\";\nimport path from \"./path.js\";\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int | Symbol\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import multiply from \"./multiply.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;","import _map from \"./internal/_map.js\";\nimport identity from \"./identity.js\";\nimport pickAll from \"./pickAll.js\";\nimport useWith from \"./useWith.js\";\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @see R.pluck, R.props, R.prop\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;","import _curry3 from \"./internal/_curry3.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _promap from \"./internal/_promap.js\";\nimport _xpromap from \"./internal/_xpromap.js\";\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\n\nvar promap =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/promap', 'promap'], _xpromap, _promap));\n\nexport default promap;","export default function _promap(f, g, profunctor) {\n  return function (x) {\n    return g(profunctor(f(x)));\n  };\n}","import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap =\n/*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nvar _xpromap =\n/*#__PURE__*/\n_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\n\nexport default _xpromap;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, prop(name, obj));\n});\n\nexport default propEq;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport is from \"./is.js\";\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, prop(name, obj));\n});\n\nexport default propIs;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport prop from \"./prop.js\";\n/**\n * Return the specified property of the given non-null object if the property\n * is present and it's value is not `null`, `undefined` or `NaN`.\n *\n * Otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return defaultTo(val, prop(p, obj));\n});\n\nexport default propOr;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(prop(name, obj));\n});\n\nexport default propSatisfies;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @see R.prop, R.pluck, R.project\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nexport default props;","import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*. `reduceRight` may use [`reduced`](#reduced)\n * to short circuit the iteration.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex, R.reduced\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;","import _curryN from \"./internal/_curryN.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;","import _curry1 from \"./internal/_curry1.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * This optimization is available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`reduceBy`](#reduceBy)\n * - [`reduceRight`](#reduceRight)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.reduceBy, R.reduceRight, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;","import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;","import _curry3 from \"./internal/_curry3.js\";\nimport always from \"./always.js\";\nimport over from \"./over.js\";\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @see R.ascend, R.descend\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;","import _curry2 from \"./internal/_curry2.js\";\nimport length from \"./length.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport take from \"./take.js\";\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;","import _curry2 from \"./internal/_curry2.js\";\nimport concat from \"./concat.js\";\nimport difference from \"./difference.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;","import _curry3 from \"./internal/_curry3.js\";\nimport concat from \"./concat.js\";\nimport differenceWith from \"./differenceWith.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtakeWhile from \"./internal/_xtakeWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nexport default _xtakeWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nexport default _xtap;","import _cloneRegExp from \"./internal/_cloneRegExp.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _isRegExp from \"./internal/_isRegExp.js\";\nimport toString from \"./toString.js\";\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      const makeQuery = email => ({ query: { email }});\n *      const fetchMember = request =>\n *        Promise.resolve({ firstName: 'Bob', lastName: 'Loblaw', id: 42 });\n *\n *      //getMemberName :: String -> Promise ({ firstName, lastName })\n *      const getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n *\n *      getMemberName('bob@gmail.com').then(console.log);\n */\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nexport default andThen;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs, R.keys, R.values\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _reduce from \"./internal/_reduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 !== 0;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry3 from \"./internal/_curry3.js\";\nimport map from \"./map.js\";\nimport sequence from \"./sequence.js\";\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : typeof traversable.traverse === 'function' ? traversable.traverse(f, of) : sequence(of, map(f, traversable));\n});\n\nexport default traverse;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from \"./internal/_arity.js\";\nimport _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send them to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('caught'))('bar') // =>\n *      'caught'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (a -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n * Note that, the returned function is actually a ramda style\n * curryied function, which can accept one or more arguments in each\n * function calling.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b -> c ... -> z) -> ((a -> b -> c ...) -> z)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry, R.curryN\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport uniqWith from \"./uniqWith.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements. If an element exists\n * in both lists, the first element from the first list will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _includesWith from \"./internal/_includesWith.js\";\nimport _xuniqWith from \"./internal/_xuniqWith.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqWith, function (pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqWith;","import _curry2 from \"./_curry2.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqWith =\n/*#__PURE__*/\nfunction () {\n  function XUniqWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.items = [];\n  }\n\n  XUniqWith.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqWith.prototype['@@transducer/step'] = function (result, input) {\n    if (_includesWith(this.pred, input, this.items)) {\n      return result;\n    } else {\n      this.items.push(input);\n      return this.xf['@@transducer/step'](result, input);\n    }\n  };\n\n  return XUniqWith;\n}();\n\nvar _xuniqWith =\n/*#__PURE__*/\n_curry2(function _xuniqWith(pred, xf) {\n  return new XUniqWith(pred, xf);\n});\n\nexport default _xuniqWith;","import _identity from \"./internal/_identity.js\";\nimport chain from \"./chain.js\";\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _map from \"./internal/_map.js\";\nimport _assoc from \"./internal/_assoc.js\";\n/**\n *\n * Deconstructs an array field from the input documents to output a document for each element.\n * Each output document is the input document with the value of the array field replaced by the element.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig String -> {k: [v]} -> [{k: v}]\n * @param {String} key The key to determine which property of the object should be unwind\n * @param {Object} object The object containing list under property named as key which is to unwind\n * @return {List} A new list of object containing the value of input key having list replaced by each element in the object.\n * @example\n *\n * R.unwind('hobbies', {\n *   name: 'alice',\n *   hobbies: ['Golf', 'Hacking'],\n *   colors: ['red', 'green'],\n * });\n * // [\n * //   { name: 'alice', hobbies: 'Golf', colors: ['red', 'green'] },\n * //   { name: 'alice', hobbies: 'Hacking', colors: ['red', 'green'] }\n * // ]\n */\n\nvar unwind =\n/*#__PURE__*/\n_curry2(function (key, object) {\n  // If key is not in object or key is not as a list in object\n  if (!(key in object && _isArray(object[key]))) {\n    return [object];\n  } // Map over object[key] which is a list and assoc each element with key\n\n\n  return _map(function (item) {\n    return _assoc(key, item, object);\n  }, object[key]);\n});\n\nexport default unwind;","import _curry2 from \"./internal/_curry2.js\"; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.set, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `whereAny` returns true if at least one of the predicates return true,\n * false otherwise.\n *\n * `whereAny` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereAny({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('xxx')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 8, y: 34}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 9, y: 21}); //=> false\n *      pred({a: 'bar', b: 'xxx', x: 10, y: 20}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 10, y: 20}); //=> true\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> true\n */\n\nvar whereAny =\n/*#__PURE__*/\n_curry2(function whereAny(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && spec[prop](testObj[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\nexport default whereAny;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport map from \"./map.js\";\nimport where from \"./where.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport flip from \"./flip.js\";\nimport reject from \"./reject.js\";\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nexport default without;","import curryN from \"./curryN.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;"],"names":["parcelRequire","$757411ca5124d4c2$export$2e2bcd8739ae039","default","a","b","Number","$aSQee","$1ae74cc5623cea21$export$2e2bcd8739ae039","fn","f2","arguments","length","$jUoAu","_b","_a","$7ec77605189b4758$export$2e2bcd8739ae039","f1","apply","this","$e7e651d63487d7d6$export$2e2bcd8739ae039","$48a4c161d30e4183$export$2e2bcd8739ae039","set1","set2","idx","len1","len2","result","$4Ddsy","$3b7e85b0e9d353dc$export$2e2bcd8739ae039","$2jcOR","$iJj5W","$35f53eb613cc1282$export$2e2bcd8739ae039","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","$da2b3dc738142f7b$export$2e2bcd8739ae039","received","combined","argsIdx","left","combinedIdx","$6eGa6","$7f73db655ec2f6ce$export$2e2bcd8739ae039","list","len","_idx","_list","$d630269a6cff22d9$export$2e2bcd8739ae039","f3","c","_c","$d21f920c7affe2af$export$2e2bcd8739ae039","$6ZOtW","$7YkEI","$aTzs4","$517f9939d3c2c885$export$2e2bcd8739ae039","methodNames","transducerCreator","obj","Array","prototype","slice","call","$i6x2p","transducer","$7eea8a68c490b09b$export$2e2bcd8739ae039","isArray","val","Object","toString","$d2e26a2a9b11036b$export$2e2bcd8739ae039","$5cde28cd36e3ce44$var$XAll","XAll1","f","xf","all","$eR2XP","init","input","$j2oQ7","$5cde28cd36e3ce44$export$2e2bcd8739ae039","$ddc178dcc7c7ccc5$export$2e2bcd8739ae039","x","$ad08508171bdd1fe$export$2e2bcd8739ae039","$0c43941275b0bc8e$export$2e2bcd8739ae039","$c57cf2ecbe3ddf08$export$2e2bcd8739ae039","p","$f7umK","$iDR1F","$b01f107cd36c1471$var$map","$5dqa2","functor","$56Gyq","$lkVty","acc","key","$bNBEE","$h5Qzz","$b01f107cd36c1471$export$2e2bcd8739ae039","$c71baf20e55260bc$export$2e2bcd8739ae039","$3CVBE","$f8880cbac514a5a0$var$_iterableReduce","iter","step","next","done","value","$f8880cbac514a5a0$var$_methodReduce","methodName","$2l9z7","$f8880cbac514a5a0$var$symIterator","Symbol","iterator","$f8880cbac514a5a0$export$2e2bcd8739ae039","$e5xOm","$f8880cbac514a5a0$var$_arrayReduce","reduce","TypeError","$2a419b1d87c69d2d$export$2e2bcd8739ae039","$lBqhj","hasOwnProperty","$fba16ff7050dd77f$export$2e2bcd8739ae039","$a41bc283a458b174$var$XWrap","XWrap1","$a41bc283a458b174$export$2e2bcd8739ae039","$1b44f66a6f82142b$var$bind","thisObj","$1b44f66a6f82142b$export$2e2bcd8739ae039","$3cc275a5f5c51b13$var$XMap","XMap1","$3cc275a5f5c51b13$export$2e2bcd8739ae039","$89717ab94613e822$var$hasEnumBug","propertyIsEnumerable","$89717ab94613e822$var$nonEnumerableProps","$89717ab94613e822$var$hasArgsEnumBug","$89717ab94613e822$var$contains","item","$89717ab94613e822$export$2e2bcd8739ae039","keys","prop","nIdx","ks","checkArgsLength","$hW4tV","$5lqfp","$3e434626b2866668$export$2e2bcd8739ae039","$d0eb546af0a6cb8d$var$toString","$d0eb546af0a6cb8d$var$_isArguments","$d0eb546af0a6cb8d$export$2e2bcd8739ae039","$d925005fae164d75$export$2e2bcd8739ae039","$e1REz","$dRibM","$a36ac71f20068253$export$2e2bcd8739ae039","isInteger","$a16e55901f91382d$export$2e2bcd8739ae039","offset","charAt","$io7kf","$0fda840d89c87320$export$2e2bcd8739ae039","$2ff120835f8592de$export$2e2bcd8739ae039","$6f9cc58c03527f53$export$2e2bcd8739ae039","$g3HDx","$bb0ec6840cf6baf3$var$XAny","XAny1","any","$bb0ec6840cf6baf3$export$2e2bcd8739ae039","$798be8b27a50c416$export$2e2bcd8739ae039","applyF","applyX","ap","$61S0F","$9xbhX","$463cbb4b3fdbb970$export$2e2bcd8739ae039","limit","$6f0ff3ca27b0bed3$var$XAperture","XAperture1","pos","full","store","getCopy","$6f0ff3ca27b0bed3$export$2e2bcd8739ae039","$de170f844fc81fb7$export$2e2bcd8739ae039","args","$7c3594007c6fb40d$export$2e2bcd8739ae039","props","vals","$a9760553a5e17ba5$export$2e2bcd8739ae039","$l8CfQ","$f63804dd4a880548$export$2e2bcd8739ae039","assocPath1","path","nextObj","$16nvB","$iG2M7","$d98e4d563993ddcf$export$2e2bcd8739ae039","arr","concat","$0cd8964fcc0096b1$export$2e2bcd8739ae039","$26474154062a5b29$export$2e2bcd8739ae039","$0eef464cca01ff27$export$2e2bcd8739ae039","type","$d4a47b4162ca03e7$export$2e2bcd8739ae039","$bGmML","$88154aac63bd773b$var$liftN","arity","lifted","$aqZkK","$88154aac63bd773b$export$2e2bcd8739ae039","$afee388cd3a0702e$export$2e2bcd8739ae039","$30KC8","monad","$ckeBz","$8f92ae87b39064ea$export$2e2bcd8739ae039","recursive","flatt","jlen","j","ilen","$231587c465d9ab00$export$2e2bcd8739ae039","$5hSxZ","$k1mhs","$3d98da33875e7c67$export$2e2bcd8739ae039","rxf","ret","$3d98da33875e7c67$var$preservingReduced","$e9352f1495fd93ec$export$2e2bcd8739ae039","$d9dra","$11797de4521b5141$export$2e2bcd8739ae039","refFrom","refTo","deep","copy","copiedValue","$7QtL4","create","getPrototypeOf","Date","valueOf","$992689f1f5b36f20$export$2e2bcd8739ae039","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","$5b647918ed6a8a39$export$2e2bcd8739ae039","undefined","$ifTfg","$lFFdy","$fc6d663e9099e5f2$export$2e2bcd8739ae039","$4Gqbx","$759e6a2bc2cac489$export$2e2bcd8739ae039","$2VCUM","$368f657a44b4e40a$export$2e2bcd8739ae039","$1mo4j","$8BhjG","$eZ8oV","$642f361a13081dbc$export$2e2bcd8739ae039","g","$iC1iK","$ae8d4779ceb1bf28$export$2e2bcd8739ae039","$gRi1d","Infinity","$d8ccc90b207990fc$export$2e2bcd8739ae039","methodname","$c45f92b9793bed27$export$2e2bcd8739ae039","fromIndex","toIndex","$221f174d4005544c$export$2e2bcd8739ae039","split","reverse","join","$6167e1f46c5d3b7b$var$pipeWith","$7i51u","headList","$fiyt1","tailList","$6167e1f46c5d3b7b$export$2e2bcd8739ae039","$b23345e505d4a129$export$2e2bcd8739ae039","$54ee1c4ac03392aa$export$2e2bcd8739ae039","$6JAQP","$4e7387e3232e683f$export$2e2bcd8739ae039","$20d6a9e934cc0e00$export$2e2bcd8739ae039","$a4m3P","$1huO0","$754b63e580f0fde1$export$2e2bcd8739ae039","$149EV","$lWKir","$0c6da83ecedaf41e$export$2e2bcd8739ae039","seen","recur","y","xs","mapPairs","keys1","k","$4aERJ","sort","$eamAk","test","isNaN","NaN","$dSSEN","repr","$9G10s","$ffa2ed402645a184$export$2e2bcd8739ae039","$l7ahT","$70b8d125c84c0682$export$2e2bcd8739ae039","inf","indexOf","$f5f23b53da900217$export$2e2bcd8739ae039","$lVNYu","$bp6nt","$ff75afc2044d59c0$var$_uniqContentEquals","aIterator","bIterator","stackA","stackB","b1","eq","$ff75afc2044d59c0$export$2e2bcd8739ae039","$3z8SR","aItem","$cwzjB","typeA","equals","constructor","$1eEUJ","name","message","size","entries","values","keysA","extendedStackA","extendedStackB","$84d6f9f9a58cca82$export$2e2bcd8739ae039","push","$298b882271db9e5b$export$2e2bcd8739ae039","pred","$0e66d5ef9194bf29$export$2e2bcd8739ae039","match","String","$91e3de09550f1416$export$2e2bcd8739ae039","is","$3097cbacd8f99590$export$2e2bcd8739ae039","s","replace","$a1bab742c708109e$var$pad","$a1bab742c708109e$export$2e2bcd8739ae039","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","$4Ie0O","$a50384c73326e174$export$2e2bcd8739ae039","filterable","$faIDi","$36e62400fc48e701$export$2e2bcd8739ae039","$b0ba695691479374$export$2e2bcd8739ae039","$93eUK","$Ufvzo","$kM5uQ","$f1fc8dd126aa3213$export$2e2bcd8739ae039","$0a9142ae7089a2b4$export$2e2bcd8739ae039","$696ff683ca156b87$var$XFilter","XFilter1","$696ff683ca156b87$export$2e2bcd8739ae039","$6944c6b535d73cad$var$constructN","Fn","$MOgn2","$3hKN6","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","$6944c6b535d73cad$export$2e2bcd8739ae039","$092b7900a45befbb$export$2e2bcd8739ae039","$55b7cb4cf5a94fb5$var$converge","after","fns","$13hpE","$gXdUG","context","$55b7cb4cf5a94fb5$export$2e2bcd8739ae039","$1v12r","$d27468100aaa010c$export$2e2bcd8739ae039","$g3Z8j","valueFn","valueAcc","keyFn","elt","$bb1c58e58d16d4ab$var$XReduceBy","XReduceBy1","inputs","$bb1c58e58d16d4ab$export$2e2bcd8739ae039","$0a7f9f2c99a59791$export$2e2bcd8739ae039","v","$832bd2e4b73e0e56$export$2e2bcd8739ae039","aa","bb","$4c7bf31ad3cf804f$export$2e2bcd8739ae039","first","second","out","firstLen","secondLen","toFilterOut","$8hw2b","i","add","$6078c297d1e76956$var$hasOrAdd","shouldAdd","set","prevSize","_items","_nativeSet","has","bIdx","$6078c297d1e76956$export$2e2bcd8739ae039","_Set1","Set","$59cd35db3021243a$export$2e2bcd8739ae039","$3f577aa3b6f252cf$export$2e2bcd8739ae039","dissocPath1","$7Fohp","head","tail","$3f577aa3b6f252cf$var$_shallowCloneObject","$ey2ik","$594f323765eb409e$export$2e2bcd8739ae039","$b6IVe","$816319d7569c0c4f$export$2e2bcd8739ae039","start","count","splice","$19b155931c59b3cd$export$2e2bcd8739ae039","$hdf7r","Math","max","$c87f60e2576c6321$var$XDrop","XDrop1","$c87f60e2576c6321$export$2e2bcd8739ae039","$dnqPL","$jfQCT","$izksi","$e0483d825a50a930$export$2e2bcd8739ae039","$d84b5ce3f84ef07d$export$2e2bcd8739ae039","$gVTCq","$c53d1cebe3168cbb$var$XTake","XTake1","$c53d1cebe3168cbb$export$2e2bcd8739ae039","$9bd23d0097aaddae$var$XDropLast","XDropLast1","$9bd23d0097aaddae$export$2e2bcd8739ae039","$8rfH4","$bk0zX","$83e202f45e5e4339$export$2e2bcd8739ae039","$624d04ca672e330c$var$XDropLastWhile","XDropLastWhile1","retained","retain","flush","$624d04ca672e330c$export$2e2bcd8739ae039","$3f1f9dbf8e4272c8$var$XDropRepeatsWith","XDropRepeatsWith1","lastValue","seenFirstValue","sameAsLast","$3f1f9dbf8e4272c8$export$2e2bcd8739ae039","$989e959fb13b9d3a$export$2e2bcd8739ae039","$5q0iT","$dsp5u","$9cc159b9b281daa7$export$2e2bcd8739ae039","$a1X8J","$74d7df4fbc979b48$var$XDropWhile","XDropWhile1","$74d7df4fbc979b48$export$2e2bcd8739ae039","$a394b964a29c41ab$export$2e2bcd8739ae039","$9dd73ca76fee62b7$var$empty","empty","$kHh3F","from","$9dd73ca76fee62b7$export$2e2bcd8739ae039","$f1150e2c44776968$export$2e2bcd8739ae039","$3b1dc68a71f369a5$export$2e2bcd8739ae039","$2cLdZ","$6CeEP","$4d11a95ca32445c4$var$XFind","XFind1","found","$4d11a95ca32445c4$export$2e2bcd8739ae039","$e2rGO","$a386bb2d6040bbfd$var$XFindIndex","XFindIndex1","$a386bb2d6040bbfd$export$2e2bcd8739ae039","$bO8fo","$898ac2f5fbdaf15e$var$XFindLast","XFindLast1","last","$898ac2f5fbdaf15e$export$2e2bcd8739ae039","$121Ba","$0c0737bfc446fc08$var$XFindLastIndex","XFindLastIndex1","lastIdx","$0c0737bfc446fc08$export$2e2bcd8739ae039","$0ccde7bdbe6db1af$var$flip","$0ccde7bdbe6db1af$export$2e2bcd8739ae039","$fa87ec08b45b57a0$export$2e2bcd8739ae039","_path","$6304fcdb3884aaf5$export$2e2bcd8739ae039","$0f7e2b1ccc5ecfc4$export$2e2bcd8739ae039","$cuTJZ","appliedItem","$9193865a1950ecde$var$XUniqBy","XUniqBy1","$9193865a1950ecde$export$2e2bcd8739ae039","$iXOOY","$b8ea6102910442af$var$_stepCatArray","$b8ea6102910442af$var$_stepCatString","$b8ea6102910442af$var$_stepCatObject","$5I2R3","$b8ea6102910442af$export$2e2bcd8739ae039","$dce528b8d576e911$export$2e2bcd8739ae039","assign","target","output","nextKey","$428346b5ac35601e$export$2e2bcd8739ae039","$0e383c5d409fb7c7$var$invoker","method","$0e383c5d409fb7c7$export$2e2bcd8739ae039","$5d8019f2a3c9ed03$export$2e2bcd8739ae039","Ctor","$6ad4ce8ee33df63f$var$juxt","$7mh1C","$6ad4ce8ee33df63f$export$2e2bcd8739ae039","$7dfe924c13ca1796$export$2e2bcd8739ae039","$3K0Jr","$2b963c5066d50841$export$2e2bcd8739ae039","$8a1180def7cabf93$export$2e2bcd8739ae039","getter","setter","toFunctorFn","focus","$a08f44105d44c69f$export$2e2bcd8739ae039","$aWqts","$47c0h","$9bd9d0833c80fa65$export$2e2bcd8739ae039","pathAr","$4RUrm","$38b7e48b37b1dd5d$export$2e2bcd8739ae039","pathsArray","map","paths2","$2eb7548e25d1dcd0$export$2e2bcd8739ae039","$a9c9l","$a5cve","$76342b55fa34e586$export$2e2bcd8739ae039","$8d8ed28c9538581e$export$2e2bcd8739ae039","mergeDeepWithKey1","lObj","rObj","$bL7jQ","lVal","rVal","$88f9c2e4c46f4f3a$export$2e2bcd8739ae039","l","r","$1d7f6fc3baf8e6e8$export$2e2bcd8739ae039","$c9vA3","$1080ec04d46af352$export$2e2bcd8739ae039","modifyPath1","object","$8WV9Q","$684013d7b0660705$export$2e2bcd8739ae039","$37211b73a19f3a8b$export$2e2bcd8739ae039","$2pNvu","$1c24519850035d73$export$2e2bcd8739ae039","$9c421153aee09b52$export$2e2bcd8739ae039","then","$ca144c4b4db1df35$var$Identity","$ca144c4b4db1df35$export$2e2bcd8739ae039","lens","$994e8a21c627e6ea$export$2e2bcd8739ae039","$10b54769fc0f5f11$export$2e2bcd8739ae039","names","$9578d83caf05820f$export$2e2bcd8739ae039","el","$4Js1T","$1qW5A","$27a17f281e748e38$var$useWith","transformers","$27a17f281e748e38$export$2e2bcd8739ae039","$423OD","$7zAup","$58381b576ff64367$export$2e2bcd8739ae039","profunctor","$2efa4f068b7e4fc2$var$XPromap","XPromap1","$2efa4f068b7e4fc2$export$2e2bcd8739ae039","$6f62584ef9dadd92$export$2e2bcd8739ae039","$932cf34f6b86107b$export$2e2bcd8739ae039","$kxStb","$ef512446502692c8$export$2e2bcd8739ae039","RangeError","$dab3de081ff86bac$export$2e2bcd8739ae039","of","traversable","sequence","$9yTvp","$cPDrB","$77c61834d23555c1$export$2e2bcd8739ae039","comparator","$d75oj","$98c01c5cf1a0b548$var$XTakeWhile","XTakeWhile1","$98c01c5cf1a0b548$export$2e2bcd8739ae039","$3TjyC","$2d55addb98a0ff14$var$XTap","XTap1","$2d55addb98a0ff14$export$2e2bcd8739ae039","$b3aa896ca8f8588e$export$2e2bcd8739ae039","$6440b6e828d5579a$var$ws","trim","$8v4Rj","$3496c4f9bd4fdade$export$2e2bcd8739ae039","$ebVZ8","$a54f12647b484aab$var$XUniqWith","XUniqWith1","items","$a54f12647b484aab$export$2e2bcd8739ae039","$670fc07c29638272$export$2e2bcd8739ae039","spec","testObj"],"version":3,"file":"index.979049fe.js.map"}