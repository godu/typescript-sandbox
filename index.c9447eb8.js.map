{"mappings":"iDAIC,WACA,MAAMA,EAASC,SAASC,cAAc,UAEtC,GAAe,OAAXF,EACH,MAAM,IAAIG,MAAM,kBAGjB,IAAKC,UAAUC,IACd,MAAM,IAAIF,MAAM,yCAGjB,MAAMG,QAAgBF,UAAUC,IAAIE,iBACpC,IAAKD,EACJ,MAAM,IAAIH,MAAM,oCAGjB,MAAMK,QAAeF,EAAQG,gBAEvBC,EAAUV,EAAOW,WAAW,UAClC,GAAgB,OAAZD,EACH,MAAM,IAAIP,MAAM,mBAGjB,MAAMS,EAAeR,UAAUC,IAAIQ,2BACnCH,EAAQI,UAAU,C,OACjBN,EACAO,OAAQH,IAGT,MAAMI,EAAW,IAAIC,aAAa,EAGjC,IAAM,GACL,IAAK,GACL,GAAM,IAEP,IAAM,IACN,GAAO,GACN,GAAM,KAGFC,EAAeV,EAAOW,aAAa,CACxCC,MAAO,gBACPC,KAAML,EAASM,WACfC,MAAOC,eAAeC,OAASD,eAAeE,WAE/ClB,EAAOmB,MAAMC,YAAYV,EAAc,EAAGF,GAE1C,MASMa,EAAmBrB,EAAOsB,mBAAmB,CAClDV,MAAO,cACPW,KAAMC,EC/DS,kODkEVC,EAAezB,EAAO0B,qBAAqB,CAChDd,MAAO,gBACPe,OAAQ,OACRC,OAAQ,CACPC,OAAQR,EACRS,WAAY,aACZC,QAAS,CApBuC,CACjDC,YAAa,EACbC,WAAY,CAAC,CACZ1B,OAAQ,YACR2B,OAAQ,EACRC,eAAgB,OAiBjBC,SAAU,CACTP,OAAQR,EACRS,WAAY,eACZO,QAAS,CAAC,CACT9B,OAAQH,OAKLkC,EAAUtC,EAAOuC,uBAEjBC,EAAOF,EAAQG,gBAAgB,CACpCC,iBAAkB,CAAC,CAClBC,KAAMzC,EAAQ0C,oBAAoBC,aAClCC,OAAQ,QACRC,WAAY,CAACC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAKC,EAAG,GACpCC,QAAS,YAIXZ,EAAKa,YAAY5B,GACjBe,EAAKc,gBAAgB,EAAG5C,GACxB8B,EAAKe,KAAK/C,EAASgD,OAAS,GAE5BhB,EAAKiB,MAELzD,EAAOmB,MAAMuC,OAAO,CAACpB,EAAQqB,UAC9B,EAjGC","sources":["src/index.ts","node_modules/@parcel/runtime-js/lib/bundles/runtime-3dc0813e8c11f1f1.js"],"sourcesContent":["\nimport cellShader from 'bundle-text:./index.wgsl';\n\n// eslint-disable-next-line unicorn/prefer-top-level-await\n(async () => {\n\tconst canvas = document.querySelector('canvas');\n\n\tif (canvas === null) {\n\t\tthrow new Error('Canvas is null');\n\t}\n\n\tif (!navigator.gpu) {\n\t\tthrow new Error('WebGPU not supported on this browser.');\n\t}\n\n\tconst adapter = await navigator.gpu.requestAdapter();\n\tif (!adapter) {\n\t\tthrow new Error('No appropriate GPUAdapter found.');\n\t}\n\n\tconst device = await adapter.requestDevice();\n\n\tconst context = canvas.getContext('webgpu');\n\tif (context === null) {\n\t\tthrow new Error('Context is null');\n\t}\n\n\tconst canvasFormat = navigator.gpu.getPreferredCanvasFormat();\n\tcontext.configure({\n\t\tdevice,\n\t\tformat: canvasFormat,\n\t});\n\n\tconst vertices = new Float32Array([\n\t\t/* eslint-disable array-element-newline, no-mixed-spaces-and-tabs, no-multi-spaces */\n\t\t//   X,    Y,\n\t\t-0.8, -0.8, // Triangle 1 (Blue)\n\t\t 0.8, -0.8,\n\t\t 0.8,  0.8,\n\n\t\t-0.8, -0.8, // Triangle 2 (Red)\n\t\t-0.8,  0.8,\n\t\t 0.8,  0.8,\n\t\t/* eslint-enable array-element-newline, no-mixed-spaces-and-tabs, no-multi-spaces */\n\t]);\n\tconst vertexBuffer = device.createBuffer({\n\t\tlabel: 'Cell vertices',\n\t\tsize: vertices.byteLength,\n\t\tusage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST, // eslint-disable-line no-bitwise\n\t});\n\tdevice.queue.writeBuffer(vertexBuffer, 0, vertices);\n\n\tconst vertexBufferLayout: GPUVertexBufferLayout = {\n\t\tarrayStride: 8,\n\t\tattributes: [{\n\t\t\tformat: 'float32x2',\n\t\t\toffset: 0,\n\t\t\tshaderLocation: 0,\n\t\t}],\n\t};\n\n\tconst cellShaderModule = device.createShaderModule({\n\t\tlabel: 'Cell shader',\n\t\tcode: cellShader,\n\t});\n\n\tconst cellPipeline = device.createRenderPipeline({\n\t\tlabel: 'Cell pipeline',\n\t\tlayout: 'auto',\n\t\tvertex: {\n\t\t\tmodule: cellShaderModule,\n\t\t\tentryPoint: 'vertexMain',\n\t\t\tbuffers: [vertexBufferLayout],\n\t\t},\n\t\tfragment: {\n\t\t\tmodule: cellShaderModule,\n\t\t\tentryPoint: 'fragmentMain',\n\t\t\ttargets: [{\n\t\t\t\tformat: canvasFormat,\n\t\t\t}],\n\t\t},\n\t});\n\n\tconst encoder = device.createCommandEncoder();\n\n\tconst pass = encoder.beginRenderPass({\n\t\tcolorAttachments: [{\n\t\t\tview: context.getCurrentTexture().createView(),\n\t\t\tloadOp: 'clear',\n\t\t\tclearValue: {r: 0, g: 0, b: 0.4, a: 1},\n\t\t\tstoreOp: 'store',\n\t\t}],\n\t});\n\n\tpass.setPipeline(cellPipeline);\n\tpass.setVertexBuffer(0, vertexBuffer);\n\tpass.draw(vertices.length / 2);\n\n\tpass.end();\n\n\tdevice.queue.submit([encoder.finish()]);\n})();\n","module.exports = \"f48ff840067cc830\";"],"names":["canvas","document","querySelector","Error","navigator","gpu","adapter","requestAdapter","device","requestDevice","context","getContext","canvasFormat","getPreferredCanvasFormat","configure","format","vertices","Float32Array","vertexBuffer","createBuffer","label","size","byteLength","usage","GPUBufferUsage","VERTEX","COPY_DST","queue","writeBuffer","cellShaderModule","createShaderModule","code","$parcel$interopDefault","cellPipeline","createRenderPipeline","layout","vertex","module","entryPoint","buffers","arrayStride","attributes","offset","shaderLocation","fragment","targets","encoder","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","getCurrentTexture","createView","loadOp","clearValue","r","g","b","a","storeOp","setPipeline","setVertexBuffer","draw","length","end","submit","finish"],"version":3,"file":"index.c9447eb8.js.map"}