{"mappings":"iDAAO,MCKDA,EAA0BC,SAASC,eAAe,QACxD,GAAa,OAATF,EAAe,MAAM,IAAIG,UAAU,QAEvC,MAAMC,EAA2BH,SAASC,eAAe,SACzD,GAAc,OAAVE,EAAgB,MAAM,IAAID,UAAU,SAExC,MAAME,EAA4BJ,SAASC,eAAe,OAC1D,GAAe,OAAXG,EAAiB,MAAM,IAAIF,UAAU,UAEzC,MAAMG,EAAKD,EAAOE,WAAW,SAC7B,GAAW,OAAPD,EAAa,MAAM,IAAIH,UAAU,SAErCE,EAAOG,MAAQH,EAAOI,YACtBJ,EAAOK,OAASL,EAAOM,aACvBL,EAAGM,SAAS,EAAG,EAAGP,EAAOI,YAAaJ,EAAOM,cAC7CE,OAAOC,SAAW,WACdT,EAAOG,MAAQH,EAAOI,YACtBJ,EAAOK,OAASL,EAAOM,aACvBL,EAAGM,SAAS,EAAG,EAAGP,EAAOI,YAAaJ,EAAOM,eAGjD,MAAMI,ECnBC,SAAuBC,EAA2BC,EAA4BC,GACjF,MAAMC,EAAMH,EAAGI,aAAaJ,EAAGK,eAC/B,GAAY,OAARF,EAAc,MAAM,IAAIhB,UAAU,OAGtC,GAFAa,EAAGM,aAAaH,EAAKF,GACrBD,EAAGO,cAAcJ,IACZH,EAAGQ,mBAAmBL,EAAKH,EAAGS,gBAC/B,MAAM,IAAIC,MAAM,4BAA8BV,EAAGW,iBAAiBR,IAItE,MAAMS,EAAMZ,EAAGI,aAAaJ,EAAGa,iBAC/B,GAAY,OAARD,EAAc,MAAM,IAAIzB,UAAU,OAGtC,GAFAa,EAAGM,aAAaM,EAAKV,GACrBF,EAAGO,cAAcK,IACZZ,EAAGQ,mBAAmBI,EAAKZ,EAAGS,gBAC/B,MAAM,IAAIC,MAAM,8BAAgCV,EAAGW,iBAAiBC,IAGxE,MAAME,EAAUd,EAAGe,gBACnB,GAAgB,OAAZD,EAAkB,MAAM,IAAI3B,UAAU,WAI1C,GAHAa,EAAGgB,aAAaF,EAASX,GACzBH,EAAGgB,aAAaF,EAASF,GACzBZ,EAAGiB,YAAYH,IACVd,EAAGkB,oBAAoBJ,EAASd,EAAGmB,aACpC,MAAM,IAAIT,MAAM,2BAA6BV,EAAGoB,kBAAkBN,IAGtE,OAAOA,EDRK,CAAcxB,EAAI+B,EE1BnB,wMF0BuCA,EG1BvC,yJH4Bf,IAAIC,EAAShC,EAAGiC,mBAAmBxB,EAAS,SACxCyB,EAAUlC,EAAGmC,kBAAkB1B,EAAS,UAExC2B,EAAgBpC,EAAGqC,eAEvBrC,EAAGsC,WAAW7B,GDjCK,CAAC8B,IAChB,MAAMC,EAAQC,YAAYC,MACpBC,EAASC,IAEXL,EADaK,EAAYJ,GAEzBK,EAAYC,sBAAsBH,IAEtC,IAAIE,EAAYC,sBAAsBH,ICiE1C,CArCA,SAAcI,GAGV,IAAIC,EAAe,EAQnB,OAPAlD,EAAMmD,iBAAiB,SAAS,KAC5BD,EAAeE,KAAKC,IAAI,EAAGH,EAAe,MAE9CtD,EAAKuD,iBAAiB,SAAS,KAC3BD,OAGG,SAASI,GAChBL,EAAGM,WAAW,EAAG,EAAG,EAAG,GACvBN,EAAGO,MAAMP,EAAGQ,iBAAmBR,EAAGS,kBAElCT,EAAGU,UAAWzB,EAAQ,EAAG,EAAG,GAE5B,MAAM0B,EAAcV,EAAe,EAC7BW,EAAW,IAAIC,aAAa,EAAIF,GAEtC,IAAK,IAAIG,EAAI,EAAGC,EAAQ,EAAGD,EAAIH,EAAaG,IACxCC,EAAQ,EAAKZ,KAAKa,GAAKf,EAAgBa,EAAKX,KAAKa,GAAK,EAAMb,KAAKa,GAAKX,EAAO,KAC7EO,EAAS,EAAIE,GAAK,GAAMX,KAAKc,IAAIF,GACjCH,EAAS,EAAIE,EAAI,GAAK,GAAMX,KAAKe,IAAIH,GAGzCf,EAAGmB,wBAAwBhC,GAE3Ba,EAAGoB,WAAWpB,EAAGqB,aAAchC,GAC/BW,EAAGsB,WAAWtB,EAAGqB,aAAcT,EAAUZ,EAAGuB,aAE5CvB,EAAGwB,oBAAoBrC,EAAS,EAAGa,EAAGyB,OAAO,EAAO,EAAG,GAEvDzB,EAAG0B,WAAW1B,EAAG2B,aAAc,EAAGhB,IAIlCiB,CAAK3E","sources":["src/utils.ts","src/webgl/polygone/index.ts","src/webgl/utils.ts","src/webgl/polygone/index.vert","src/webgl/polygone/index.frag"],"sourcesContent":["export const run = (update: (time: number) => void) => {\n    const start = performance.now();\n    const frame = (timestamp: number) => {\n        const time = timestamp - start;\n        update(time);\n        requestId = requestAnimationFrame(frame)\n    };\n    let requestId = requestAnimationFrame(frame)\n\n    return () => cancelAnimationFrame(requestId);\n}\n","import vertexShaderSource from './index.vert';\nimport fragmentShaderSource from './index.frag';\nimport { createProgram } from '../utils';\nimport {run} from '../../utils';\n\nconst plus = <HTMLButtonElement>document.getElementById('plus');\nif (plus === null) throw new TypeError('plus');\n\nconst minus = <HTMLButtonElement>document.getElementById('minus');\nif (minus === null) throw new TypeError('minus');\n\nconst canvas = <HTMLCanvasElement>document.getElementById('app');\nif (canvas === null) throw new TypeError('canvas');\n\nconst gl = canvas.getContext('webgl');\nif (gl === null) throw new TypeError('webgl');\n\ncanvas.width = canvas.clientWidth;\ncanvas.height = canvas.clientHeight;\ngl.viewport(0, 0, canvas.clientWidth, canvas.clientHeight);\nwindow.onresize = function () { // reset canvas size when window size is changed\n    canvas.width = canvas.clientWidth;\n    canvas.height = canvas.clientHeight;\n    gl.viewport(0, 0, canvas.clientWidth, canvas.clientHeight);\n}\n\nconst program = createProgram(gl, vertexShaderSource, fragmentShaderSource);\n\nlet uColor = gl.getUniformLocation(program, \"color\")\nlet aCoords = gl.getAttribLocation(program, \"coords\");\n\nlet aCoordsBuffer = gl.createBuffer();\n\ngl.useProgram(program);\n\nfunction draw(gl: WebGLRenderingContext) {\n\n\n    let polygonSides = 3;\n    minus.addEventListener('click', () => {\n        polygonSides = Math.max(3, polygonSides - 1);\n    });\n    plus.addEventListener('click', () => {\n        polygonSides++;\n    });\n\n    return function(time: number) {\n    gl.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.uniform3f( uColor, 1, 0, 1 ); // Red\n\n    const vertexCount = polygonSides + 1;\n    const vertices = new Float32Array(2 * vertexCount);\n\n    for (let i = 0, angle = 0; i < vertexCount; i++) {\n        angle = (2 * Math.PI / polygonSides) * i + (Math.PI / 2) + (Math.PI * time * 0.001);\n        vertices[2 * i] = 0.8 * Math.cos(angle);\n        vertices[2 * i + 1] = 0.8 * Math.sin(angle);\n    }\n\n    gl.enableVertexAttribArray(aCoords);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, aCoordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STREAM_DRAW);\n\n    gl.vertexAttribPointer(aCoords, 2, gl.FLOAT, false, 0, 0);\n\n    gl.drawArrays(gl.TRIANGLE_FAN, 0, vertexCount);\n};\n};\n\nrun(draw(gl))\n","\n/* Creates a program for use in the WebGL context gl, and returns the\n * identifier for that program.  If an error occurs while compiling or\n * linking the program, an exception of type String is thrown.  The error\n * string contains the compilation or linking error.  If no error occurs,\n * the program identifier is the return value of the function.\n */\nexport function createProgram(gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string) {\n    const vsh = gl.createShader(gl.VERTEX_SHADER);\n    if (vsh === null) throw new TypeError('vsh');\n    gl.shaderSource(vsh, vertexShaderSource);\n    gl.compileShader(vsh);\n    if (!gl.getShaderParameter(vsh, gl.COMPILE_STATUS)) {\n        throw new Error(\"Error in vertex shader : \" + gl.getShaderInfoLog(vsh));\n    }\n\n\n    const fsh = gl.createShader(gl.FRAGMENT_SHADER);\n    if (fsh === null) throw new TypeError('fsh');\n    gl.shaderSource(fsh, fragmentShaderSource);\n    gl.compileShader(fsh);\n    if (!gl.getShaderParameter(fsh, gl.COMPILE_STATUS)) {\n        throw new Error(\"Error in fragment shader : \" + gl.getShaderInfoLog(fsh));\n    }\n\n    const program = gl.createProgram();\n    if (program === null) throw new TypeError('program');\n    gl.attachShader(program, vsh);\n    gl.attachShader(program, fsh);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        throw new Error(\"Link error in program:  \" + gl.getProgramInfoLog(program));\n    }\n\n    return program;\n}\n","attribute vec2 coords;\nattribute vec3 vertexColor;\nvarying vec3 color;\n\nvoid main() {\n    gl_Position = vec4( coords.x, coords.y, 0.0, 1.0 );\n    color = vertexColor;\n}\n","precision mediump float;\n\nuniform vec3 color;\n\nvoid main() {\n    gl_FragColor = vec4( color.r, color.g, color.b, 1.0 );\n}\n"],"names":["$89765c47dc65a609$var$plus","document","getElementById","TypeError","$89765c47dc65a609$var$minus","$89765c47dc65a609$var$canvas","$89765c47dc65a609$var$gl","getContext","width","clientWidth","height","clientHeight","viewport","window","onresize","$89765c47dc65a609$var$program","gl","vertexShaderSource","fragmentShaderSource","vsh","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Error","getShaderInfoLog","fsh","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","$parcel$interopDefault","$89765c47dc65a609$var$uColor","getUniformLocation","$89765c47dc65a609$var$aCoords","getAttribLocation","$89765c47dc65a609$var$aCoordsBuffer","createBuffer","useProgram","update","start","performance","now","frame","timestamp","requestId","requestAnimationFrame","gl1","polygonSides","addEventListener","Math","max","time","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","uniform3f","vertexCount","vertices","Float32Array","i","angle","PI","cos","sin","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","STREAM_DRAW","vertexAttribPointer","FLOAT","drawArrays","TRIANGLE_FAN","$89765c47dc65a609$var$draw"],"version":3,"file":"index.4c2638a9.js.map"}